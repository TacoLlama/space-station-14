using System;
using Content.Shared._CD.Records;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.IoC;

namespace Content.Client._CD.Admin.UI;

/// <summary>
/// Simple helper window that builds the purge/delete commands for admins modifying records at runtime.
/// </summary>
[GenerateTypedNameReferences]
public sealed partial class ModifyCharacterRecords : DefaultWindow
{
    public ModifyCharacterRecords()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        foreach (var value in Enum.GetValues<CharacterRecordType>())
        {
            EntityEntryType.AddItem(value.ToString());
        }

        if (EntityEntryType.ItemCount > 0)
            EntityEntryType.SelectId(0);

        EntityEntryType.OnItemSelected += args =>
        {
            EntityEntryType.SelectId(args.Id);
            UpdateCommands();
        };

        EntityEdit.OnTextChanged += _ => UpdateCommands();
        EntityEntryIndex.OnTextChanged += _ => UpdateCommands();
    }

    private void UpdateCommands()
    {
        if (!int.TryParse(EntityEdit.Text, out var entityId))
            return;

        if (!int.TryParse(EntityEntryIndex.Text, out var entryIndex))
            return;

        var entryType = (CharacterRecordType) EntityEntryType.SelectedId;

        PurgeCommand.Command = $"purgecharacterrecords {entityId}";
        DelCommand.Command = $"delrecordentry {entityId} {entryType} {entryIndex}";
    }
}
