using Content.Shared._Starlight.Character.Info.Components;
using Content.Shared.Mind;
using Content.Shared.Roles.Jobs;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;

namespace Content.Client._Starlight.Character.Info.UI;

[GenerateTypedNameReferences]
public sealed partial class CharacterOOCInfoControl : Control
{
    public CharacterOOCInfoControl()
    {
        RobustXamlLoader.Load(this);
    }

    public void SetCharacter(EntityUid? target, IEntityManager entityManager, EntityUid? viewer = null)
    {
        if (!target.HasValue)
        {
            ClearCharacter();
            return;
        }

        var mind = entityManager.System<SharedMindSystem>().GetMind(target.Value);

        CharacterView.SetCharacter(target,
            entityManager.System<SharedJobSystem>().MindTryGetJobName(mind, out var jobName)
                ? jobName
                : string.Empty,
            viewer);

        string? oocNotes = null;
        if (entityManager.TryGetComponent(mind, out RoleplayInfoComponent? rpInfoComponent))
        {
            oocNotes = rpInfoComponent.OOCNotes;
        }

        OOCNotes.Text = oocNotes;

        string? personalNotes = null;
        if (entityManager.TryGetComponent(mind, out MindSecretsComponent? secretsComponent))
        {
            personalNotes = secretsComponent.PersonalNotes;
        }

        PersonalNotes.Text = personalNotes;

        HiddenInfoSection.Visible = personalNotes != null;
    }

    public void ClearCharacter()
    {
        CharacterView.ClearCharacter();
        PersonalNotes.Text = null;
        HiddenInfoSection.Visible = false;
    }
}